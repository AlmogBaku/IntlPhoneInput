apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 107
        versionName "1.0.7"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.googlecode.libphonenumber:libphonenumber:7.7.2'
    compile 'com.android.support:appcompat-v7:25.2.0'
}

ext {
    groupId = 'net.rimoto'
    versionId = '1.0.7'
    gitProjectUrl = "https://github.com/funambol/IntlPhoneInput"
    gitUrl = "https://github.com/funambol/IntlPhoneInput"
}

group = groupId  // Maven Group ID for the artifact
version = versionId

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

apply plugin: 'com.github.dcendents.android-maven'
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId groupId
                artifactId "intlphoneinput"

                // Add your description here
                name "IntlPhoneInput"
                description "A custom view for Android that allows the user to enter his phone number in an elegant and friendly way."
                url gitProjectUrl

                // Set your license
                licenses {
                    license {
                        name "The Apache Software License, Version 2.0"
                        url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        name "Rimoto"
                    }
                }
                scm {
                    connection gitUrl
                    url gitProjectUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
